// =========================================================
// [1 ~ 4 대상 예제]
const numArray = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

// 1. 배열 뒤집기 : [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]

// 2. 평균 구하기 : [5.5]

// 3. 최대값-최소값 구하기 : [10, 1]

// 4. 누적합 : [55]
// =========================================================

// =========================================================
// 5. 대상 예제
const requireSortArray = [
  ['DS7651', 'A0'],
  ['CA0055', 'D+'],
  ['AI5543', 'C0'],
  ['OS1808', 'B-'],
  ['DS7651', 'B+'],
  ['AI0001', 'F'],
  ['DB0001', 'B-'],
  ['AI5543', 'D+'],
  ['DS7651', 'A+'],
  ['OS1808', 'B-'],
];
// 배열 정렬하기 : 1. 아이디 순 2. 점수 순, 3. 등급 순(+,0)
// =========================================================

// =========================================================
// [6 ~ 8 대상 예제]
const duplicateArray = [
  'a',
  () => {
    console.log(1);
  },
  'c',
  'd',
  1,
  { name: 'amy', age: 16 },

  3,
  4,
  'a',
  'c',
  3,
  { name: 'amy', age: 16 },
  [1, 2, 3, 4],
  () => {
    console.log(1);
  },
  2,
];

// 6. 중복된 요소의 개수 구하기 : 5

// 7. 중복 요소 제거하기 : [
//   'a',
//   () => {
//     console.log(1);
//   },
//   'c',
//   'd',
//   1,
//   { name: 'amy', age: 16 },
//   3,
//   4,
//   [1, 2, 3, 4],
//   2,
// ]

// 8. 중첩 배열 평탄화 : [
//   'a',
//   () => {
//     console.log(1);
//   },
//   'c',
//   'd',
//   1,
//   { name: 'amy', age: 16 },
//   3,
//   4,
//   1,
//   2,
//   3,
//   4,
//   2,
// ]
// =========================================================

// =========================================================
// 9. 로또 만들기(1~45까지 6개의 랜덤한 숫자를 출력하는 프로그램으로 중복이 있으면 안 됩니다)
// =========================================================
